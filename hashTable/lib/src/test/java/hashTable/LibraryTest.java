/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package hashTable;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class LibraryTest {

    @Test
    public void hashTableTest(){
        // Adding a key/value to your hashtable results in the value being in the data structure
        HashTable testTable = new HashTable<>();
        testTable.add("testValue", 10);
        assertEquals(10, testTable.get("testValue"));
        assertEquals("HashTable{hashTable=[null, null, null, null, null, null, null, null, null, null, Bucket{key=testValue, value=10}, null, null, null, null]}", testTable.toString());

        // Retrieving based on a key returns the value stored
        assertEquals(10, testTable.get("testValue"));

        // Successfully returns null for a key that does not exist in the hashtable
        assertNull(testTable.get("null"));

        // Successfully handle a collision within the hashtable
        testTable.add("A", "certain Value");
        testTable.add("second", "second Value");
        assertEquals("HashTable{hashTable=[null, null, null, null, null, Bucket{key=A, value=certain Value}, null, null, null, null, Bucket{key=second, value=second Value}, null, null, null, null]}", testTable.toString());

        // Successfully retrieve a value from a bucket within the hashtable that has a collision
        assertEquals("second Value", testTable.get("second"));

        // Successfully hash a key to an in-range value
        assertEquals(5, testTable.hash("A"));
        assertEquals(10, testTable.hash("second"));
    }
}
